{"version":3,"sources":["store/slices/gameSlice.ts","pages/LoaderPage.tsx","App.tsx","store/slices/commonSlice.ts","store/index.ts","index.tsx"],"names":["gameSlice","createSlice","name","initialState","reducers","onGameInfoChange","state","action","gameId","payload","serverUrl","setVideoUrl","videoUrl","selectGameInfo","createSelector","game","gameState","actions","useStyles","makeStyles","theme","loader","position","top","left","right","bottom","display","justifyContent","flexDirection","alignItems","LoaderPage","classes","className","LoginPage","lazy","GamePage","App","fallback","path","component","to","commonSlice","errorMessage","error","store","configureStore","reducer","common","middleware","getDefaultMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6FAAA,wFAaMA,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAJgC,GAKhCC,SAAU,CACNC,iBADM,SACWC,EAAOC,GACpBD,EAAME,OAASD,EAAOE,QAAQD,OAC9BF,EAAMI,UAAYH,EAAOE,QAAQC,WAErCC,YALM,SAKML,EAAOC,GACfD,EAAMM,SAAWL,EAAOE,YAKvBI,EAAiBC,aAC1B,SAACR,GAAD,OAAsBA,EAAMS,QAC5B,SAACC,GAAD,MAAiC,CAC7BR,OAAQQ,EAAUR,OAClBE,UAAWM,EAAUN,c,GAICI,aAC1B,SAACR,GAAD,OAAsBA,EAAMS,QAC5B,SAACC,GAAD,MAAiC,CAC7BJ,SAAUI,EAAUJ,aAIqBZ,EAAUiB,SAA5CZ,E,EAAAA,iB,EAAkBM,YAElBX,MAAf,S,uICzCMkB,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5CC,OAAQ,CACJC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EAERC,QAAS,OACTC,eAAgB,SAChBC,cAAe,SACfC,WAAY,cAcLC,EAVkB,WAC7B,IAAMC,EAAUd,IAChB,OACI,sBAAKe,UAAWD,EAAQX,OAAxB,UACI,uDACA,oDClBNa,EAAYC,gBAAK,kBAAM,uDACvBC,EAAWD,gBAAK,kBAAM,iCAgBbE,MAdf,WACI,OACI,cAAC,IAAD,UACI,cAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWJ,IAC/B,cAAC,IAAD,CAAOG,KAAK,SAASC,UAAWN,IAChC,cAAC,IAAD,CAAUO,GAAG,mB,QCJ3BC,EAAczC,YAAY,CAC5BC,KAAM,SACNC,aAP4B,CAC5BkB,QAAQ,EACRsB,aAAc,MAMdvC,SAAU,CACNiB,OADM,SACCf,EAAOC,GACVD,EAAMe,OAASd,EAAOE,SAE1BmC,MAJM,SAIAtC,EAAOC,GACTD,EAAMqC,aAAepC,EAAOE,Y,EAKPiC,EAAYzB,QAE9ByB,G,EAFArB,O,EAAQuB,MAERF,EAAf,S,QCtBaG,EAAQC,YAAe,CAChCC,QAAS,CACLC,OAAQN,EACR3B,KAAMf,KAEViD,WAAYC,YAAqB,CAAEC,OAAO,M,QCF9CC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRU,SAASC,eAAe,W","file":"static/js/main.e34a981f.chunk.js","sourcesContent":["import { createSlice, PayloadAction, createSelector } from '@reduxjs/toolkit';\nimport { RootState } from '../index';\n\nexport type GameStatus = 'error' | 'open' | 'close' | 'init';\n\nexport interface GameReducerType {\n    gameId?: number;\n    serverUrl?: string;\n    videoUrl?: string;\n}\n\nlet initialState: GameReducerType = {};\n\nconst gameSlice = createSlice({\n    name: 'game',\n    initialState,\n    reducers: {\n        onGameInfoChange(state, action: PayloadAction<{ gameId?: number; serverUrl?: string }>) {\n            state.gameId = action.payload.gameId;\n            state.serverUrl = action.payload.serverUrl;\n        },\n        setVideoUrl(state, action: PayloadAction<string>) {\n            state.videoUrl = action.payload;\n        },\n    },\n});\n\nexport const selectGameInfo = createSelector(\n    (state: RootState) => state.game,\n    (gameState: GameReducerType) => ({\n        gameId: gameState.gameId,\n        serverUrl: gameState.serverUrl,\n    }),\n);\n\nexport const selectVideoUrl = createSelector(\n    (state: RootState) => state.game,\n    (gameState: GameReducerType) => ({\n        videoUrl: gameState.videoUrl,\n    }),\n);\n\nexport const { onGameInfoChange, setVideoUrl } = gameSlice.actions;\n\nexport default gameSlice.reducer;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    loader: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst LoaderPage: React.FC<{}> = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.loader}>\n            <h1>Loading session info!</h1>\n            <p>Please wait....</p>\n        </div>\n    );\n};\n\nexport default LoaderPage;\n","import { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport Loader from './pages/LoaderPage';\n\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst GamePage = lazy(() => import('./pages/GamePage'));\n\nfunction App() {\n    return (\n        <Router>\n            <Suspense fallback={<Loader />}>\n                <Switch>\n                    <Route path=\"/game\" component={GamePage} />\n                    <Route path=\"/login\" component={LoginPage} />\n                    <Redirect to=\"/login\" />\n                </Switch>\n            </Suspense>\n        </Router>\n    );\n}\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nexport interface CommonState {\n    loader: boolean;\n    errorMessage: string | null;\n}\n\nlet initialState: CommonState = {\n    loader: true,\n    errorMessage: null,\n};\n\nconst commonSlice = createSlice({\n    name: 'common',\n    initialState,\n    reducers: {\n        loader(state, action: PayloadAction<boolean>) {\n            state.loader = action.payload;\n        },\n        error(state, action: PayloadAction<string | null>) {\n            state.errorMessage = action.payload;\n        },\n    },\n});\n\nexport const { loader, error } = commonSlice.actions;\n\nexport default commonSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport commonSlice from './slices/commonSlice';\nimport gameSlice from './slices/gameSlice';\n\nexport const store = configureStore({\n    reducer: {\n        common: commonSlice,\n        game: gameSlice,\n    },\n    middleware: getDefaultMiddleware({ thunk: true }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}