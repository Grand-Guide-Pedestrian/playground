{"version":3,"sources":["components/overlay/index.ts","components/overlay/Overlay.tsx","components/player/index.ts","components/player/Player.tsx","assets/caret-square-left-regular.svg","assets/caret-square-right-regular.svg","assets/caret-square-up-regular.svg","assets/caret-square-down-regular.svg","components/controls/Controls.tsx","components/controls/index.ts","App.tsx","index.tsx"],"names":["Overlay","zIndex","className","style","Player","videoId","id","containerClassName","opts","height","width","playerVars","autoplay","mute","controls","loop","rel","showinfo","disablekb","fs","modestbranding","iv_load_policy","updateActivityStatusForKeysWithCode","keys","keyCode","active","map","key","ControlKey","data","onClick","src","img","alt","Controls","useState","up","left","bottom","right","setKeys","timers","useRef","clearTimeout","current","undefined","prev","window","setTimeout","keyHandler","useCallback","e","useEffect","addEventListener","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEeA,ECC4B,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAe,qBAAKC,UAAU,UAAUC,MAAO,CAACF,OAAQA,MCDpFG,ECE+B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7C,OACI,qCACI,cAAC,IAAD,CACIC,GAAG,SACHC,mBAAmB,SACnBF,QAASA,EACTG,KAAM,CACFC,OAAQ,OACRC,MAAO,OACPC,WAAY,CACRC,SAAU,EACVC,KAAM,EACNC,SAAU,EACVC,KAAM,EACNC,IAAK,EACLC,SAAU,EACVC,UAAW,EACXC,GAAI,EACJC,eAAgB,EAChBC,eAAgB,MAI5B,cAAC,EAAD,CAASpB,OAAQ,Q,cC5Bd,MAA0B,sDCA1B,MAA0B,uDCA1B,MAA0B,oDCA1B,MAA0B,sDCmBnCqB,G,MAAsC,SAACC,EAAwBC,EAAiBC,GAA1C,OACxCF,EACKG,KAAI,SAACC,GACF,OAAIA,EAAIH,UAAYA,EACT,2BAAKG,GAAZ,IAAiBF,WAEdE,OAGbC,EAA+D,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC1E,OACI,yBACIxB,GAAIuB,EAAKvB,GACTJ,UAAS,wBAAmB2B,EAAKJ,OAAS,wBAA0B,IACpEK,QAAS,kBAAMA,EAAQD,EAAKL,UAHhC,UAKKK,EAAKvB,GACN,qBAAKyB,IAAKF,EAAKG,IAAKC,IAAI,kBAAkB/B,UAAU,wBClCjDgC,EDuCE,WACb,MAAwBC,mBAA2B,CAC/C,CAAE7B,GAAI,KAAM0B,IAAKI,EAAIZ,QAAS,WAC9B,CAAElB,GAAI,OAAQ0B,IAAKK,EAAMb,QAAS,aAClC,CAAElB,GAAI,SAAU0B,IAAKM,EAAQd,QAAS,aACtC,CAAElB,GAAI,QAAS0B,IAAKO,EAAOf,QAAS,gBAJxC,mBAAOD,EAAP,KAAaiB,EAAb,KAMIC,EAASC,iBAAe,IAEtBZ,EAAU,SAACN,GACbmB,aAAaF,EAAOG,QAAQpB,SAAYqB,GAExCL,GAAQ,SAACM,GAAD,OAAUxB,EAAoCwB,EAAMtB,GAAS,MACrEiB,EAAOG,QAAQpB,GAAWuB,OAAOC,YAC7B,kBAAMR,GAAQ,SAACM,GAAD,OAAUxB,EAAoCwB,EAAMtB,GAAS,QAC3E,MAIFyB,EAAaC,uBAAY,SAACC,GACd,YAAVA,EAAExB,KAA+B,eAAVwB,EAAExB,KAAkC,cAAVwB,EAAExB,KAAiC,cAAVwB,EAAExB,KAC5EG,EAAQqB,EAAExB,OAIf,IAUH,OARAyB,qBAAU,WAGN,OAFAL,OAAOM,iBAAiB,UAAWJ,GAE5B,WACHF,OAAOO,oBAAoB,UAAWL,MAE3C,CAACA,IAGA,yBAAS/C,UAAU,WAAnB,SACKqB,EAAKG,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,CAAyBE,KAAMF,EAAKG,QAASA,GAA5BH,EAAIrB,U,MEjEtBiD,MATf,WACE,OACE,sBAAKrD,UAAU,MAAf,UACE,cAAC,EAAD,CAAQG,QAAQ,gBAChB,cAAC,EAAD,QCJNmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.66b35b71.chunk.js","sourcesContent":["import Overlay from './Overlay';\n\nexport default Overlay;","import React from \"react\";\nimport './Overlay.css';\n\nconst Overlay:React.FC<{zIndex: number}> = ({zIndex}) => (<div className=\"overlay\" style={{zIndex: zIndex}}></div>);\n\nexport default Overlay;","import Player from './Player';\n\nexport default Player;","import React from 'react';\nimport YouTube from 'react-youtube';\nimport Overlay from '../overlay';\n\nconst Player: React.FC<{ videoId: string }> = ({ videoId }) => {\n    return (\n        <>\n            <YouTube\n                id=\"player\"\n                containerClassName=\"player\"\n                videoId={videoId}\n                opts={{\n                    height: '100%',\n                    width: '100%',\n                    playerVars: {\n                        autoplay: 1,    // start video after player loaded\n                        mute: 1,        // volume 0\n                        controls: 0,    // disable controls\n                        loop: 1,        // repeat video after finish\n                        rel: 0,         // view relevant videos disabled\n                        showinfo: 0,    // hide video info\n                        disablekb: 1,   //disable keyboard\n                        fs: 0,          // disable fullscreen button\n                        modestbranding: 1,  // less branding\n                        iv_load_policy: 3 // disable annotations\n                    },\n                }}\n            />\n            <Overlay zIndex={1} />\n        </>\n    );\n};\n\nexport default Player;\n","export default __webpack_public_path__ + \"static/media/caret-square-left-regular.d2b158ae.svg\";","export default __webpack_public_path__ + \"static/media/caret-square-right-regular.843d4198.svg\";","export default __webpack_public_path__ + \"static/media/caret-square-up-regular.72c44358.svg\";","export default __webpack_public_path__ + \"static/media/caret-square-down-regular.07b1c3b2.svg\";","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport left from '../../assets/caret-square-left-regular.svg';\nimport right from '../../assets/caret-square-right-regular.svg';\nimport up from '../../assets/caret-square-up-regular.svg';\nimport bottom from '../../assets/caret-square-down-regular.svg';\nimport './Controls.css';\nimport { PartialRecord } from '../../custom';\n\ntype KeyCode = 'ArrowUp' | 'ArrowLeft' | 'ArrowDown' | 'ArrowRight';\n\ninterface ControlKeyData {\n    id: string;\n    img: string;\n    keyCode: KeyCode;\n    active?: boolean;\n}\n\ntype Timers = PartialRecord<KeyCode, number>;\n\nconst updateActivityStatusForKeysWithCode = (keys: ControlKeyData[], keyCode: string, active: boolean) =>\n    keys\n        .map((key) => {\n            if (key.keyCode === keyCode) {\n                return { ...key, active };\n            }\n            return key;\n        });\n\nconst ControlKey: React.FC<{ data: ControlKeyData; onClick: any }> = ({ data, onClick }) => {\n    return (\n        <button\n            id={data.id}\n            className={`controls__key ${data.active ? 'keyboard__key--active' : ''}`}\n            onClick={() => onClick(data.keyCode)}\n        >\n            {data.id}\n            <img src={data.img} alt=\"keyboard button\" className=\"controls__image\" />\n        </button>\n    );\n};\n\nconst Controls = () => {\n    const [keys, setKeys] = useState<ControlKeyData[]>([\n        { id: 'up', img: up, keyCode: 'ArrowUp' },\n        { id: 'left', img: left, keyCode: 'ArrowLeft' },\n        { id: 'bottom', img: bottom, keyCode: 'ArrowDown' },\n        { id: 'right', img: right, keyCode: 'ArrowRight' },\n    ]);\n    let timers = useRef<Timers>({});\n\n    const onClick = (keyCode: KeyCode) => {\n        clearTimeout(timers.current[keyCode] || undefined);\n\n        setKeys((prev) => updateActivityStatusForKeysWithCode(prev, keyCode, true));\n        timers.current[keyCode] = window.setTimeout(\n            () => setKeys((prev) => updateActivityStatusForKeysWithCode(prev, keyCode, false)),\n            1000,\n        ) as number;\n    };\n\n    const keyHandler = useCallback((e: KeyboardEvent) => {\n        if (e.key === 'ArrowUp' || e.key === 'ArrowRight' || e.key === 'ArrowLeft' || e.key === 'ArrowDown') {\n            onClick(e.key);\n        } else {\n            return;\n        }\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('keydown', keyHandler);\n\n        return () => {\n            window.removeEventListener('keydown', keyHandler);\n        };\n    }, [keyHandler]);\n\n    return (\n        <section className=\"controls\">\n            {keys.map((key) => (\n                <ControlKey key={key.id} data={key} onClick={onClick} />\n            ))}\n        </section>\n    );\n};\n\nexport default Controls;\n","import Controls from './Controls';\n\nexport default Controls;\n","import React from 'react';\nimport Player from './components/player';\nimport Controls from './components/controls';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Player videoId=\"F0GBVmpWnlE\" />\n      <Controls />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}