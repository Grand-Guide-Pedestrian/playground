{"version":3,"sources":["pages/LoginPage.tsx","store/hooks.ts"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","alignItems","gap","breakpoints","down","maxWidth","up","submit","position","bottom","right","backgroundColor","color","filter","Login","classes","dispatch","useAppDispatch","history","useHistory","useState","serverUrl","setServerUrl","gameId","setGameId","onLogin","useCallback","e","preventDefault","onGameInfoChange","replace","className","onSubmit","id","label","fullWidth","required","onChange","target","value","type","aria-label","onClick","useDispatch","useAppSelector","useSelector"],"mappings":"yMAUMA,EAAYC,aAAW,SAACC,GAAD,YAAmB,CAC5CC,MAAI,GACAC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,eACZC,IAAK,QALL,cAMCN,EAAMO,YAAYC,KAAK,MAAQ,CAC5BC,SAAU,QAPd,cASCT,EAAMO,YAAYG,GAAG,MAAQ,CAC1BD,SAAU,QAVd,GAaJE,OAAQ,CACJC,SAAU,WACVC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,SACjBC,MAAO,QACP,UAAW,CACPD,gBAAiB,SACjBE,OAAQ,wBA4DLC,UAvDa,WACxB,IAAMC,EAAUrB,IACVsB,EAAWC,cACXC,EAAUC,cAHc,EAKIC,mBAAiB,IALrB,mBAKvBC,EALuB,KAKZC,EALY,OAMFF,qBANE,mBAMvBG,EANuB,KAMfC,EANe,KAQxBC,EAAUC,uBACZ,SAACC,GACGA,EAAEC,iBACIL,GAAYF,IACdL,EAASa,YAAiB,CAAEN,SAAQF,eACpCH,EAAQY,QAAQ,YAGxB,CAACd,EAAUO,EAAQF,EAAWH,IAGlC,OACI,mCACI,yBAASa,UAAS,gBAAWhB,EAAQlB,MAArC,SACI,uBAAMmC,SAAUP,EAAhB,UACI,cAAC,IAAD,CACIQ,GAAG,MACHF,UAAU,aACVG,MAAM,uBACNC,WAAW,EACXC,UAAU,EACVC,SAAU,SAACV,GAAD,OAAOL,EAAaK,EAAEW,OAAOC,QACvCA,MAAOlB,IAEX,cAAC,IAAD,CACIY,GAAG,SACHF,UAAU,iBACVG,MAAM,UACNC,WAAW,EACXC,UAAU,EACVC,SAAU,SAACV,GAAD,OAAOH,GAAWG,EAAEW,OAAOC,QACrCA,MAAOhB,EACPiB,KAAK,WAET,cAAC,IAAD,CACIT,UAAS,wBAAmBhB,EAAQR,QACpCkC,aAAW,gBACXC,QAASjB,EAHb,SAKI,cAAC,IAAD,e,gCCpFxB,gFAGaR,EAAiB,kBAAM0B,eACvBC,EAAkDC","file":"static/js/5.a7fb1f25.chunk.js","sourcesContent":["import { TextField, IconButton } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { useAppDispatch } from '../store/hooks';\nimport { onGameInfoChange } from '../store/slices/gameSlice';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'space-evenly',\n        gap: '1rem',\n        [theme.breakpoints.down('md')]: {\n            maxWidth: '80%',\n        },\n        [theme.breakpoints.up('lg')]: {\n            maxWidth: '30%',\n        },\n    },\n    submit: {\n        position: 'absolute',\n        bottom: '1rem',\n        right: '1rem',\n        backgroundColor: 'purple',\n        color: 'white',\n        '&:hover': {\n            backgroundColor: 'purple',\n            filter: 'brightness(1.4)',\n        },\n    },\n}));\n\nconst Login: React.FC<{}> = () => {\n    const classes = useStyles();\n    const dispatch = useAppDispatch();\n    const history = useHistory();\n\n    const [serverUrl, setServerUrl] = useState<string>('');\n    const [gameId, setGameId] = useState<number | undefined>();\n\n    const onLogin = useCallback(\n        (e) => {\n            e.preventDefault();\n            if (!!gameId && !!serverUrl) {\n                dispatch(onGameInfoChange({ gameId, serverUrl }));\n                history.replace('/game');\n            }\n        },\n        [dispatch, gameId, serverUrl, history],\n    );\n\n    return (\n        <>\n            <section className={`login ${classes.root}`}>\n                <form onSubmit={onLogin}>\n                    <TextField\n                        id=\"url\"\n                        className=\"login__url\"\n                        label=\"WebSocket server URL\"\n                        fullWidth={true}\n                        required={true}\n                        onChange={(e) => setServerUrl(e.target.value)}\n                        value={serverUrl}\n                    />\n                    <TextField\n                        id=\"gameId\"\n                        className=\"login__game-id\"\n                        label=\"Game ID\"\n                        fullWidth={true}\n                        required={true}\n                        onChange={(e) => setGameId(+e.target.value)}\n                        value={gameId}\n                        type=\"number\"\n                    />\n                    <IconButton\n                        className={`login__button ${classes.submit}`}\n                        aria-label=\"login__button\"\n                        onClick={onLogin}\n                    >\n                        <ArrowRightAltIcon />\n                    </IconButton>\n                </form>\n            </section>\n        </>\n    );\n};\n\nexport default Login;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"sourceRoot":""}